{"version":3,"file":"static/js/407.6d0bd207.chunk.js","mappings":"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","sources":["components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","Pages/Movies.jsx","components/Api/Api.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: inline-block;\n  margin: 0 auto;\n  padding: 24px;\n`;\n\nexport const Input = styled.input`\n  margin-top: 24px;\n  padding: 0 12px;\n  width: 400px;\n  height: 40px;\n  border: 2px solid #4d5ae5;\n  border-radius: 4px 0 0 4px;\n  outline: #4d5ae5;\n`;\n\nexport const BtnForm = styled.button`\n  height: 43px;\n  padding: 0px 24px;\n  border: 2px solid #4d5ae5;\n  border-radius: 0 4px 4px 0;\n  background-color: transparent;\n  color: black;\n`;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { BtnForm, Form, Input } from './SearchForm.styled';\n\nconst SearchForm = () => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = ({ target: { value } }) => {\n    if (!value) setSearchParams({});\n    setQuery(value);\n  };\n\n  const handleSearch = () => {\n    searchParams({ query: query });\n  };\n\n\n  return (\n    <Form onSubmit={handleSearch}>\n      <Input\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        autoComplete=\"off \"\n        placeholder=\"Enter movie\"\n        required\n        onChange={handleChange}\n      />\n      <BtnForm type=\"submit\">Search</BtnForm>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n","import { useEffect, useState } from 'react';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieSearch } from 'components/Api/Api';\nimport MovieList from 'components/MoviesList/MoviesList';\nimport toast from 'react-hot-toast';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n    const fetchSearch = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n        const { data } = await getMovieSearch(query);\n        setMovies(data.results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSearch();\n  }, [query]);\n\n  return (\n    <>\n      {loading && <p>...LOADING</p>}\n      {error && !loading && toast.error('Movie not found.')}\n      <SearchForm />\n      <MovieList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: { api_key: 'b4bd07f1e94011ce6ac66467073c8fb1' },\n});\n\nexport const getTrending = () => {\n  return instance.get('trending/all/day?');\n};\n\nexport const getMovieId = id => {\n  return instance.get(`movie/${id}?`);\n};\n\nexport const getCastId = id => {\n  return instance.get(`movie/${id}/credits`);\n};\n\nexport const getReviewsId = id => {\n  return instance.get(`movie/${id}/reviews`);\n};\n\nexport const getMovieSearch = query => {\n  return instance.get(`search/movie?query=${query}`);\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n`;\n\nexport const Item = styled.li`\n  width: calc((100% - 230px) / 6);\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const MovieTitle = styled.p`\n  text-align: center;\n  font-size: 18px;\n  font-weight: 500;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Item, List, MovieLink, MovieTitle } from './MoviesList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, poster_path }) => {\n          return (\n            <Item key={id}>\n              <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                  alt={title}\n                />\n                <MovieTitle>{title}</MovieTitle>\n              </MovieLink>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nexport default MovieList;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","BtnForm","_templateObject3","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_jsxs","onSubmit","children","_jsx","type","name","autoFocus","autoComplete","placeholder","required","onChange","_ref","value","target","movies","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","get","useEffect","fetchSearch","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getMovieSearch","data","_context","prev","next","getMovieSearch","sent","results","t0","finish","stop","apply","arguments","_Fragment","toast","SearchForm","MovieList","instance","axios","baseURL","params","api_key","getTrending","getMovieId","id","concat","getCastId","getReviewsId","List","Item","MovieLink","Link","MovieTitle","_templateObject4","location","useLocation","map","_ref2","title","poster_path","to","state","from","src","alt"],"sourceRoot":""}