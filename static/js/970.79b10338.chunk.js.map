{"version":3,"file":"static/js/970.79b10338.chunk.js","mappings":"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","sources":["Api/Api.js","Pages/Home.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: { api_key: 'b4bd07f1e94011ce6ac66467073c8fb1' },\n});\n\nexport const getTrending = () => {\n  return instance.get('trending/all/day?');\n};\n\nexport const getMovieId = id => {\n  return instance.get(`movie/${id}?`);\n};\n\nexport const getCastId = id => {\n  return instance.get(`movie/${id}/credits`);\n};\n\nexport const getReviewsId = id => {\n  return instance.get(`movie/${id}/reviews`);\n};\n\nexport const getMovieSearch = query => {\n  return instance.get(`search/movie?query=${query}`);\n};\n","import { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { getTrending } from 'Api/Api';\nimport MovieList from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchTrending = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n        const { data } = await getTrending();\n        setMovies(data.results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTrending();\n  }, []);\n\n  return (\n    <main>\n      {loading && <Loader />}\n      <h2>Trending today</h2>\n      {error &&\n        !loading &&\n        toast.error('Error loading movies. Please try again later.')}\n      <MovieList movies={movies} />\n    </main>\n  );\n};\n\nexport default Home;","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n`;\n\nexport const Item = styled.li`\n  width: calc((100% - 230px) / 6);\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const MovieTitle = styled.p`\n  text-align: center;\n  font-size: 18px;\n  font-weight: 500;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Item, List, MovieLink, MovieTitle } from './MoviesList.styled';\nimport defaultImgPoster from '../Image/default-poster.jpeg';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, poster_path }) => {\n          return (\n            <Item key={id}>\n              <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                      : defaultImgPoster\n                  }\n                  alt={title}\n                />\n                <MovieTitle>{title}</MovieTitle>\n              </MovieLink>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nexport default MovieList;\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","getMovieId","id","concat","getCastId","getReviewsId","getMovieSearch","query","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getTrending","data","_context","prev","next","sent","results","t0","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","toast","MovieList","List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","MovieLink","Link","_templateObject3","MovieTitle","_templateObject4","location","useLocation","_Fragment","map","_ref2","title","poster_path","to","state","from","src","defaultImgPoster","alt"],"sourceRoot":""}