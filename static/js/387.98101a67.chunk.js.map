{"version":3,"file":"static/js/387.98101a67.chunk.js","mappings":"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","sources":["components/Api/Api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: { api_key: 'b4bd07f1e94011ce6ac66467073c8fb1' },\n});\n\nexport const getTrending = () => {\n  return instance.get('trending/all/day?');\n};\n\nexport const getMovieId = id => {\n  return instance.get(`movie/${id}?`);\n};\n\nexport const getCastId = id => {\n  return instance.get(`movie/${id}/credits`);\n};\n\nexport const getReviewsId = id => {\n  return instance.get(`movie/${id}/reviews`);\n};\n\nexport const getMovieSearch = query => {\n  return instance.get(`search/movie?query=${query}`);\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 120px;\n`;\n\nexport const ImgWrap = styled.div`\n  width: 120px;\n  height: 200px;\n  display: flex;\n`;\n\nexport const ImgCast = styled.img`\n  object-fit: cover;\n`;\n\nexport const NameCast = styled.p`\n  text-align: center;\n  font-weight: 500;\n`;\n\nexport const InfoCast = styled.p`\n  text-align: center;\n`;\n","import { getCastId } from 'components/Api/Api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  ImgCast,\n  ImgWrap,\n  InfoCast,\n  Item,\n  List,\n  NameCast,\n} from './Cast.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport toast from 'react-hot-toast';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCastId = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n        const { data } = await getCastId(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCastId();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {error && !loading && toast.error('Cast not found.')}\n      {cast && (\n        <List>\n          {cast.map(({ name, character, profile_path, id }) => (\n            <Item key={id}>\n              <ImgWrap>\n                <ImgCast\n                  src={`https://image.tmdb.org/t/p/w300${profile_path}`}\n                  alt={name}\n                />\n              </ImgWrap>\n\n              <NameCast>{name}</NameCast>\n              <InfoCast>Character: {character}</InfoCast>\n            </Item>\n          ))}\n        </List>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","getMovieId","id","concat","getCastId","getReviewsId","getMovieSearch","query","List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","ImgWrap","_templateObject3","ImgCast","_templateObject4","NameCast","_templateObject5","InfoCast","_templateObject6","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","useEffect","fetchCastId","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getCastId","data","_context","prev","next","sent","t0","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","toast","map","_ref2","name","character","profile_path","src","alt"],"sourceRoot":""}