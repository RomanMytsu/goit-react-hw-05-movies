{"version":3,"file":"static/js/134.a3e0976f.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","Pages/MovieDetails.jsx","components/Api/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 100px;\n  justify-content: center;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 400px;\n`;\n\nexport const Span = styled.span`\n  font-weight: 500;\n`;\n","import { Info, Span, Wrap } from './MovieInfo.styled';\n\nconst MovieInfo = ({\n  movie: { genres, title, overview, poster_path, runtime, vote_average },\n}) => {\n  const posterUrl = `https://image.tmdb.org/t/p/w500${poster_path}`;\n  const elements = genres.map(({ id, name }) => <span key={id}>{name}</span>);\n\n  return (\n    <Wrap>\n      <img src={posterUrl} alt={title} />\n      <Info>\n        <h2>{title}</h2>\n        <p>\n          <Span>User score: {vote_average}</Span>\n        </p>\n        <p>\n          <Span> Duration: {runtime} minutes</Span>\n        </p>\n        <p>\n          <Span>{overview}</Span>\n        </p>\n        <p>\n          <Span>Genres: {elements}</Span>\n        </p>\n      </Info>\n    </Wrap>\n  );\n};\n\nexport default MovieInfo;\n","import { useEffect, useRef, useState } from 'react';\nimport {\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport toast from 'react-hot-toast';\n\nimport { getMovieId } from './../components/Api/Api';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport { Loader } from 'components/Loader/Loader';\nimport { LinkStyled } from 'components/Header/Header.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const location = useLocation();\n  const goBack = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchSelectedMovie = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n        const { data } = await getMovieId(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSelectedMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && !loading && toast.error('Movie not found.')}\n      <NavLink to={goBack.current}>Go back</NavLink>\n      {movie && <MovieInfo movie={movie} />}\n\n      <ul>\n        <li>\n          <LinkStyled to=\"cast\">Cast</LinkStyled>\n        </li>\n        <li>\n          <LinkStyled to=\"reviews\">Reviews</LinkStyled>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: { api_key: 'b4bd07f1e94011ce6ac66467073c8fb1' },\n});\n\nexport const getTrending = () => {\n  return instance.get('trending/all/day?');\n};\n\nexport const getMovieId = id => {\n  return instance.get(`movie/${id}?`);\n};\n\nexport const getCastId = id => {\n  return instance.get(`movie/${id}/credits`);\n};\n\nexport const getReviewsId = id => {\n  return instance.get(`movie/${id}/reviews`);\n};\n\nexport const getMovieSearch = query => {\n  return instance.get(`search/movie?query=${query}`);\n};\n"],"names":["Wrap","styled","_templateObject","_taggedTemplateLiteral","Info","_templateObject2","Span","_templateObject3","_ref","_ref$movie","movie","genres","title","overview","poster_path","runtime","vote_average","posterUrl","concat","elements","map","_ref2","id","name","_jsx","children","_jsxs","src","alt","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","location","useLocation","goBack","useRef","state","from","useEffect","fetchSelectedMovie","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getMovieId","data","_context","prev","next","getMovieId","sent","t0","finish","stop","apply","arguments","_Fragment","Loader","toast","NavLink","to","current","MovieInfo","LinkStyled","Outlet","instance","axios","baseURL","params","api_key","getTrending","get","getCastId","getReviewsId","getMovieSearch","query"],"sourceRoot":""}