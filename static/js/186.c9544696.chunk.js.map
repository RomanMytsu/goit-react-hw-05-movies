{"version":3,"file":"static/js/186.c9544696.chunk.js","mappings":"yQAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CAAEC,QAAS,sCAGRC,EAAc,WACzB,OAAOL,EAASM,IAAI,oBACtB,EAEaC,EAAa,SAAAC,GACxB,OAAOR,EAASM,IAAI,SAADG,OAAUD,EAAE,KACjC,EAEaE,EAAY,SAAAF,GACvB,OAAOR,EAASM,IAAI,SAADG,OAAUD,EAAE,YACjC,EAEaG,EAAe,SAAAH,GAC1B,OAAOR,EAASM,IAAI,SAADG,OAAUD,EAAE,YACjC,EAEaI,EAAiB,SAAAC,GAC5B,OAAOb,EAASM,IAAI,sBAADG,OAAuBI,GAC5C,C,0HCuBA,UAzCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA8BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAkB1B,OAhBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGH,OAHGF,EAAAC,KAAA,EAEnBV,GAAW,GACXJ,GAAS,GAAOa,EAAAE,KAAA,GACO7B,EAAAA,EAAAA,IAAaG,GAAS,KAAD,EAAAsB,EAAAE,EAAAG,KAApCJ,EAAID,EAAJC,KACRhB,EAAWgB,EAAKK,SAASJ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAEzBb,GAAS,GAAM,QAEG,OAFHa,EAAAC,KAAA,GAEfV,GAAW,GAAOS,EAAAM,OAAA,6BAAAN,EAAAO,OAAA,GAAAV,EAAA,yBAErB,kBAXmB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAYpBhB,GACF,GAAG,CAACjB,KAGFkC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CACsB,IAAnB7B,EAAQ8B,SACPC,EAAAA,EAAAA,KAAA,KAAGC,MAAO,CAAEC,UAAW,SAAUC,WAAY,QAASL,SAAC,6CAIxDrB,IAAWuB,EAAAA,EAAAA,KAACI,EAAAA,EAAM,IAClB/B,IAAUI,GAAW4B,EAAAA,GAAAA,MAAY,sBACjCpC,EAAQqC,KAAI,SAAAC,GAAA,IAAGC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAASpD,EAAEkD,EAAFlD,GAAE,OACjCwC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEE,EAAAA,EAAAA,KAAA,MAAAF,SAAKU,KACLR,EAAAA,EAAAA,KAAA,KAAAF,SAAIW,MAFGpD,EAGJ,MAIb,C","sources":["Api/Api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: { api_key: 'b4bd07f1e94011ce6ac66467073c8fb1' },\n});\n\nexport const getTrending = () => {\n  return instance.get('trending/all/day?');\n};\n\nexport const getMovieId = id => {\n  return instance.get(`movie/${id}?`);\n};\n\nexport const getCastId = id => {\n  return instance.get(`movie/${id}/credits`);\n};\n\nexport const getReviewsId = id => {\n  return instance.get(`movie/${id}/reviews`);\n};\n\nexport const getMovieSearch = query => {\n  return instance.get(`search/movie?query=${query}`);\n};\n","import { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useParams } from 'react-router-dom';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { getReviewsId } from 'Api/Api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchReviewsId = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n        const { data } = await getReviewsId(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReviewsId();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length === 0 && (\n        <p style={{ textAlign: 'center', paddingTop: '20px' }}>\n          We don't have any reviews for this movie\n        </p>\n      )}\n      {loading && <Loader />}\n      {error && !loading && toast.error('Reviews not found.')}\n      {reviews.map(({ author, content, id }) => (\n        <li key={id}>\n          <h4>{author}</h4>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","getMovieId","id","concat","getCastId","getReviewsId","getMovieSearch","query","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","useEffect","fetchReviewsId","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getReviewsId","data","_context","prev","next","sent","results","t0","finish","stop","apply","arguments","_jsxs","children","length","_jsx","style","textAlign","paddingTop","Loader","toast","map","_ref2","author","content"],"sourceRoot":""}